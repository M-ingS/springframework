<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- 시큐리티가 적용되지 않는 요청 경로 설정 -->
	<!-- 정적인 파일을 넣는 resources 파일에는 시큐리티 적용x -->
	<security:http pattern="/resources/**" security="none"/>	
	<!-- 시큐리티 필터 체인을 구성 -->
	<security:http>
		<!-- 폼 인증 방식 선택 -->
		<security:form-login
			login-page="/ch17/loginForm"
			username-parameter="mid"
			password-parameter="mpassword"	
			login-processing-url="/login"
			authentication-success-handler-ref="ch17AuthenticationSuccessHandler"
			authentication-failure-handler-ref="ch17AuthenticationFailureHandler"/>

		<!-- 로그아웃 설정 -->
		<security:logout 
			logout-url="/logout"
			success-handler-ref="ch17LogoutSuccessHandler"/>
		
		<!-- 사이트간 요청 위조 방지 비활성화 -->
		<security:csrf disabled="true"/>
			
	</security:http>
	<!-- 로그인이 성공 or 실패하면 이 관리객체로 등록되어 있는 클래스 실행 -->
	<bean id="ch17AuthenticationSuccessHandler"
		class="com.mycompany.springframework.security.Ch17AuthenticationSuccessHandler"/>
	
	<bean id="ch17AuthenticationFailureHandler"
		class="com.mycompany.springframework.security.Ch17AuthenticationFailureHandler"/>
		
	<bean id="ch17LogoutSuccessHandler"
		class="com.mycompany.springframework.security.Ch17LogoutSuccessHandler"/>
		
	<!-- DB에서 데이터를 가져와서 사용자가 보낸 데이터와 비교 -->
	<security:authentication-manager>
		<security:authentication-provider ref="daoAuthenticationProvider"/>
	</security:authentication-manager>	
	
	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="ch17UserDetailService"></property>
		<property name="authoritiesMapper" ref="roleHierarchyAuthoritiesMapper"></property>	
	</bean>
	
	<bean id="roleHierarchyAuthoritiesMapper"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
		<constructor-arg ref="roleHierarchyImpl" />
	</bean>
	<bean id="roleHierarchyImpl"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ROLE_ADMIN > ROLE_MANAGER
				ROLE_MANAGER > ROLE_USER
			</value>
		</property>
	</bean>
	
	
</beans>
